const express = require('express')
const Datastore = require('nedb');
const {
    Auth
} = require("two-step-auth");



const app = express()
app.use(express.static(__dirname + `/public`))
app.use(express.json({
    limit: '5mb'
}));

const database = new Datastore('database.db');
const database1 = new Datastore('database1.db');

database.loadDatabase();
database1.loadDatabase();


// var questionPool = [{
//             question: "The default value of a static integer variable of a class in Java is,",
//             options: [
//                 "0",
//                 "1",
//                 "Garbage value",
//                 "null"
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "To prevent any method from overriding, we declare the method as,",
//             options: [
//                 "static",
//                 "const",
//                 "final",
//                 "abstract"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "Which one of the following is not true?",
//             options: [
//                 "A class containing abstract methods is called an abstract class.",
//                 "Abstract methods should be implemented in the derived class.",
//                 "An abstract class cannot have non-abstract methods.",
//                 "A class must be qualified as ‘abstract’ class, if it contains one abstract method."
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "The fields in an interface are implicitly specified as,",
//             options: [
//                 "static only",
//                 "private",
//                 "both static and final",
//                 "protected"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "Which of the following is TRUE?",
//             options: [
//                 "In java, an instance field declared public generates a compilation error.",
//                 "int is the name of a class available in the package java.lang",
//                 "Instance variable names may only contain letters and digits.",
//                 "A class has always a constructor (possibly automatically supplied by the java compiler)."
//             ],
//             correctIndex: 4
//         },
//         {
//             question: "A constructor",
//             options: [
//                 "Must have the same name as the class it is declared within.",
//                 "Is used to create objects.",
//                 "May be declared private.",
//                 "All of the above."
//             ],
//             correctIndex: 4
//         },
//         {
//             question: "What is byte code in the context of Java?",
//             options: [
//                 "The type of code generated by a Java compiler.",
//                 "The type of code generated by a Java Virtual Machine.",
//                 "It is another name for a Java source file.",
//                 "It is the code written within the instance methods of a class."
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "What is garbage collection in the context of Java?",
//             options: [
//                 "The operating system periodically deletes all the java files available on the system.",
//                 "When all references to an object are gone, the memory used by the object is automatically reclaimed.",
//                 "The JVM checks the output of any Java program and deletes anything that doesn’t make sense.",
//                 "Any package imported in a program and not used is automatically deleted.",

//             ],
//             correctIndex: 2
//         },
//         {
//             question: "The correctIndex order of the declarations in a Java program is,",
//             options: [
//                 "Package declaration, import statement, class declaration",
//                 "Import statement, package declaration, class declaration",
//                 "Import statement, class declaration, package declaration",
//                 "Class declaration, package declaration, import statement."
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "All exception types are subclasses of the built-in class",
//             options: [
//                 "Exception",
//                 "RuntimeException",
//                 "Error",
//                 "Throwable"
//             ],
//             correctIndex: 4
//         },
//         {
//             question: "In Java, a try block should immediately be followed by one or more ________ blocks.",
//             options: [
//                 "Throw",
//                 "Run",
//                 "Exit",
//                 "Catch"
//             ],
//             correctIndex: 4
//         },
//         {
//             question: "________ are used to document a program and improve its readability.",
//             options: [
//                 "Comments",
//                 "Blocks",
//                 "Control structures",
//                 "Keywords"
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "In object-oriented programming, the process by which one object acquires the properties of another object is called",
//             options: [
//                 "Encapsulation",
//                 "Inheritance",
//                 "Overriding",
//                 "Polymorphism"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "________ is known as the father of Java.",
//             options: [
//                 "Rasmus Lerdrof",
//                 "James Gosling",
//                 "Denis Richie",
//                 "None of the above"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "Which of these is an incorrectIndex statement?",
//             options: [
//                 "String objects are immutable, they cannot be changed",
//                 "String object can point to some other reference of String variable",
//                 "StringBuffer class is used to store string in a buffer for later use",
//                 "None of the mentioned"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "Which of the following is generally used for performing tasks like creating the structure of the relations, deleting relation?",
//             options: [
//                 "DDL(Data Definition Language)",
//                 "DML(Data Manipulation Language)",
//                 "Query",
//                 "Relational Schema"
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "Which one of the following given statements possibly contains the error?",
//             options: [
//                 "select * from emp where empid = 10003;",
//                 "select empid where empid = 1009 and Lastname = 'GELLER';",
//                 "select empid from emp;",
//                 "select empid from emp where empid = 10006;"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "In one-to-many relationship the table on 'many' side is called ________",
//             options: [
//                 "Master",
//                 "Sister",
//                 "Child",
//                 "Parent"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "What type of join is needed when you wish to include rows that do not have matching values?",
//             options: [
//                 "Natural join",
//                 "Outer join",
//                 "Equi-join",
//                 "None of the mentioned"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "Which forms simplifies and ensures that there are minimal data aggregates and repetitive groups:",
//             options: [
//                 "1NF",
//                 "2NF",
//                 "3NF",
//                 "All of the above"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "What is the scientific name of a butterfly?",
//             answers: [
//                 "Apis",
//                 "Coleoptera",
//                 "Formicidae",
//                 "Rhopalocera"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "How hot is the surface of the sun?",
//            options: [
//                 "1,233 K",
//                 "5,778 K",
//                 "12,130 K",
//                 "101,300 K"
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "Who are the actors in The Internship?",
//            options: [
//                 "Ben Stiller, Jonah Hill",
//                 "Courteney Cox, Matt LeBlanc",
//                 "Kaley Cuoco, Jim Parsons",
//                 "Vince Vaughn, Owen Wilson"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "What is the capital of Spain?",
//            options: [
//                 "Berlin",
//                 "Buenos Aires",
//                 "Madrid",
//                 "San Juan"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "What are the school colors of the University of Texas at Austin?",
//            options: [
//                 "Black, Red",
//                 "Blue, Orange",
//                 "White, Burnt Orange",
//                 "White, Old gold, Gold"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "What is 70 degrees Fahrenheit in Celsius?",
//            options: [
//                 "18.8889",
//                 "20",
//                 "21.1111",
//                 "158"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "When was Mahatma Gandhi born?",
//            options: [
//                 "October 2, 1869",
//                 "December 15, 1872",
//                 "July 18, 1918",
//                 "January 15, 1929"
//             ],
//             correctIndex: 0
//         },
//         {
//             question: "How far is the moon from Earth?",
//            options: [
//                 "7,918 miles (12,742 km)",
//                 "86,881 miles (139,822 km)",
//                 "238,400 miles (384,400 km)",
//                 "35,980,000 miles (57,910,000 km)"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "What is 65 times 52?",
//            options: [
//                 "117",
//                 "3120",
//                 "3380",
//                 "3520"
//             ],
//             correctIndex: 2
//         },
//         {
//             question: "How tall is Mount Everest?",
//            options: [
//                 "6,683 ft (2,037 m)",
//                 "7,918 ft (2,413 m)",
//                 "19,341 ft (5,895 m)",
//                 "29,029 ft (8,847 m)"
//             ],
//             correctIndex: 3
//         },
//         {
//             question: "When did The Avengers come out?",
//            options: [
//                 "May 2, 2008",
//                 "May 4, 2012",
//                 "May 3, 2013",
//                 "April 4, 2014"
//             ],
//             correctIndex: 1
//         },
//         {
//             question: "What is 48,879 in hexidecimal?",
//            options: [
//                 "0x18C1",
//                 "0xBEEF",
//                 "0xDEAD",
//                 "0x12D591"
//             ],
//             correctIndex: 1
//     }
// ]
//         database.insert(questionPool);

// let questions = [];

function randomize(data1) {
    let questions = [];

    console.log('here 4')
    // console.log(data1);
    let i = 0;
    let num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
    while (i < 10) {
        let random = Math.floor(Math.random() * num.length)
        let spli = num.splice(random, 1);
        questions.push(data1[spli[0]]);;
        i++;
    }
    return questions;
}

// database.find({}).sort({ correctIndex:3 })
//         .limit(2)
//         .exec((err, data) => {
//       if (err) {
//          console.log(err);
//       response.end();
//       return;
//       }
//       console.log("came here");
//       response.send(data);
//             sort(data);

//     });
app.get('/api', (request, response) => {

    database.find({}, (err, data) => {
        if (err) {
            console.log(err);
            response.end();
            return;
        }
        console.log("came here");
        response.send(randomize(data));
        // randomize(data)

    });
});

// var path = require('path');
// app.get('/questions', (req, res) => {
//     res.sendFile('questions.html', function (err) {
//     if (err) {
//         next(err);
//     } else {
//         console.log('Sent:', questions.html);
//         next();
//     }
//    });
// });



// app.get('/instructions', (req, res) => {
//     console.log("start");
//     if (req.query.name && req.query.email) {
//         let name = req.query.name;
//         let email = req.query.email;
//         var doc = {
//             name: name,
//             email: email
//         };
//         database1.insert(doc);
//         console.log(name);
//         console.log(email);
//     }
//     res.sendFile(__dirname + `/public/instructions.html`);

// });


app.get('/admin-login', (req, res) => {
    console.log("start");

    res.sendFile(__dirname + `/public/adminLogin.html`);

});

app.get('/result', (req, res) => {
    console.log("start");

    res.sendFile(__dirname + `/public/score.html`);

});


async function login(emailId) {
    const res = await Auth(emailId);
    // You can follow this approach,
    // but the second approach is suggested,
    // as the mails will be treated as important
    console.log(res);
    console.log(res.mail);

    let otp = res.OTP;
    let status = res.success;
    console.log({
        otp,
        status
    })

    return {
        otp,
        status
    };
}



app.post('/otp', (req, res) => {
    const data = req.body;
    console.log(data);
    login(data.email).then(res1 => {
        res.json(res1);
    });
});



app.post('/resultdata', (request, response) => {
    const data = request.body;
    database1.insert(data);
    console.log('insert')
    response.json(data);

});


app.post('/add_questions', (request, response) => {
    const data = request.body;

    const data1 = {
        question: data.question,
        options: [data.choices[0], data.choices[1], data.choices[2], data.choices[3]],
        correctIndex: data.correctindex
    }
    database.insert(data1);
});




app.get('/rankings', (request, response) => {
    database1.find({}, (err, data) => {
        if (err) {
            response.end();
            return;
        }
        response.json(data);
    });
});






// app.post('/instructions', (req, res) => {
//     console.log("start");
//     if (req.body.name && req.body.email) {
//         console.log(req.body + "vx");
//         let name = req.body.name;
//         let email = req.body.email;
//         var doc = {
//             name: name,
//             email: email
//         };
//         database1.insert(doc);
//         console.log(name);
//         console.log(email);


//     }
//     res.end(__dirname + `/public/instructions.html`);

// });

app.listen(4821, () => {
    console.log('server started on http://localhost:4821')
})